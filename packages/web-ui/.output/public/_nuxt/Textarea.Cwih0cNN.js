import{_ as V,B as q,av as N,C as f,h as $,D as F,E as w,r as z,O as H,j as C,P as A,ad as D,s as R,G as E,H as G,o as P,c as J,a as K,K as L,L as U,n as Q,aq as W}from"./entry.RCh-zIuy.js";import{y as X}from"./api.8WJftHjd.js";const o=q(f.ui.strategy,f.ui.textarea,N),Y=$({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator(e){return Object.keys(o.size).includes(e)}},color:{type:String,default:()=>o.default.color,validator(e){return[...f.ui.colors,...Object.keys(o.color)].includes(e)}},variant:{type:String,default:()=>o.default.variant,validator(e){return[...Object.keys(o.variant),...Object.values(o.color).flatMap(t=>Object.keys(t))].includes(e)}},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur"],setup(e,{emit:t}){const{ui:l,attrs:c}=F("textarea",w(e,"ui"),o,w(e,"class")),{emitFormBlur:m,emitFormInput:p,inputId:u,color:v,size:g,name:I}=X(e,o),r=z(H({},e.modelModifiers,{trim:!1,lazy:!1,number:!1})),s=z(null),y=()=>{var a;e.autofocus&&((a=s.value)==null||a.focus())},d=()=>{if(e.autoresize){if(!s.value)return;s.value.rows=e.rows;const a=window.getComputedStyle(s.value),n=parseInt(a.paddingTop),i=parseInt(a.paddingBottom),k=n+i,M=parseInt(a.lineHeight),{scrollHeight:T}=s.value,B=(T-k)/M;B>e.rows&&(s.value.rows=B)}},b=a=>{r.value.trim&&(a=a.trim()),r.value.number&&(a=W(a)),t("update:modelValue",a),p()},h=a=>{d(),r.value.lazy||b(a.target.value)},S=a=>{const n=a.target.value;r.value.lazy&&b(n),r.value.trim&&(a.target.value=n.trim())},j=a=>{t("blur",a),m()};C(()=>{setTimeout(()=>{y()},e.autofocusDelay)}),A(()=>e.modelValue,()=>{D(d)}),C(()=>{setTimeout(()=>{y(),d()},100)});const O=R(()=>{var n,i;const a=((i=(n=l.value.color)==null?void 0:n[v.value])==null?void 0:i[e.variant])||l.value.variant[e.variant];return E(G(l.value.base,l.value.form,l.value.rounded,l.value.placeholder,l.value.size[g.value],e.padded?l.value.padding[g.value]:"p-0",a==null?void 0:a.replaceAll("{color}",v.value),!e.resize&&"resize-none"),e.textareaClass)});return{ui:l,attrs:c,name:I,inputId:u,textarea:s,textareaClass:O,onInput:h,onChange:S,onBlur:j}}}),Z=["id","value","name","rows","required","disabled","placeholder"];function x(e,t,l,c,m,p){return P(),J("div",{class:Q(e.ui.wrapper)},[K("textarea",L({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:t[0]||(t[0]=(...u)=>e.onInput&&e.onInput(...u)),onBlur:t[1]||(t[1]=(...u)=>e.onBlur&&e.onBlur(...u)),onChange:t[2]||(t[2]=(...u)=>e.onChange&&e.onChange(...u))}),null,16,Z),U(e.$slots,"default")],2)}const ae=V(Y,[["render",x]]);export{ae as _};
